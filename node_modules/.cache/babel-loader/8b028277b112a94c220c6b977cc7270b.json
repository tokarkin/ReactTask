{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dimak\\\\Desktop\\\\\\u041D\\u043E\\u0432\\u0430 \\u043F\\u0430\\u043F\\u043A\\u0430\\\\src\\\\components\\\\Container.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { deletePost, editNewPosts, getAllPosts, getComments, postComments, sendNewPost } from \"../redux/posts-reducer\";\nimport RenderAllPosts from \"./RenderAllPosts\";\nimport { Route } from \"react-router-dom\";\nimport EditPost from \"./EditPost\";\nimport { initialize } from \"redux-form\";\nimport CreateNewPost from \"./CreateNewPosts\";\n\nclass Container extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = formData => {\n      console.log(formData);\n\n      if (formData.title !== ' ') {\n        this.props.editNewPosts(formData);\n      }\n    };\n\n    this.onCreate = formData => {\n      console.log(formData);\n\n      if (formData.title && formData.body !== ' ') {\n        this.props.sendNewPost(formData);\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.getPosts();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(RenderAllPosts, {\n      comments: this.props.comments.data,\n      editPost: this.props.editPost,\n      initialize: this.props.initialize,\n      deletePost: this.props.deletePost,\n      posts: this.props.posts,\n      postComments: this.props.postComments,\n      getComments: this.props.getComments,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/edit/:id?\",\n      render: () => React.createElement(EditPost, {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(CreateNewPost, {\n      onSubmit: this.onCreate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }));\n  }\n\n}\n\nlet moveStateToProps = state => {\n  return {\n    posts: state.posts.allPosts,\n    comments: state.posts.commnets\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    getPosts: () => dispatch(getAllPosts()),\n    editNewPosts: post => dispatch(editNewPosts(post)),\n    initialize: post => dispatch(initialize('edit-post', post)),\n    sendNewPost: formData => dispatch(sendNewPost(formData)),\n    deletePost: post => dispatch(deletePost(post)),\n    getComments: id => dispatch(getComments(id)),\n    postComments: (formData, id) => dispatch(postComments(formData, id))\n  };\n};\n\nexport default connect(moveStateToProps, mapDispatchToProps)(Container);","map":{"version":3,"sources":["C:/Users/dimak/Desktop/Нова папка/src/components/Container.jsx"],"names":["React","Component","connect","deletePost","editNewPosts","getAllPosts","getComments","postComments","sendNewPost","RenderAllPosts","Route","EditPost","initialize","CreateNewPost","Container","onSubmit","formData","console","log","title","props","onCreate","body","componentDidMount","getPosts","render","comments","data","editPost","posts","moveStateToProps","state","allPosts","commnets","mapDispatchToProps","dispatch","post","id"],"mappings":"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","sourcesContent":["import React,{Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport {deletePost, editNewPosts, getAllPosts, getComments, postComments, sendNewPost} from \"../redux/posts-reducer\";\nimport RenderAllPosts from \"./RenderAllPosts\";\nimport {Route} from \"react-router-dom\";\nimport EditPost from \"./EditPost\";\nimport {initialize} from \"redux-form\";\nimport CreateNewPost from \"./CreateNewPosts\";\n\n\n\n\nclass Container extends Component {\n    componentDidMount() {\n        this.props.getPosts();\n\n    }\n    onSubmit=(formData)=>{\n        console.log(formData);\n        if(formData.title !== ' '){\n        this.props.editNewPosts(formData);\n        }\n    };\n    onCreate = (formData)=>{\n        console.log(formData);\n        if(formData.title&&formData.body !== ' '){\n            this.props.sendNewPost(formData);\n        }\n    }\n    render() {\n        return( <div>\n                 <RenderAllPosts comments={this.props.comments.data} editPost={this.props.editPost} initialize={this.props.initialize}\n                                 deletePost={this.props.deletePost}  posts={this.props.posts}\n                                 postComments={this.props.postComments}\n                                 getComments={this.props.getComments}/>\n                 <Route path='/edit/:id?' render={()=> <EditPost onSubmit={this.onSubmit} />} />\n                <CreateNewPost  onSubmit={this.onCreate} />\n            </div>\n\n        ) }\n}\n\nlet moveStateToProps = (state) => {\n    return {\n        posts: state.posts.allPosts,\n        comments: state.posts.commnets,\n\n    }\n};\nlet mapDispatchToProps  = dispatch=>{\n\n    return{\n        getPosts: ()=>dispatch(getAllPosts()),\n        editNewPosts:(post)=> dispatch(editNewPosts(post)),\n        initialize: (post)=> dispatch(initialize('edit-post',post)),\n        sendNewPost:(formData)=> dispatch(sendNewPost(formData)),\n        deletePost:(post)=> dispatch(deletePost(post)),\n        getComments:(id)=>dispatch(getComments(id)),\n        postComments:(formData,id)=>dispatch(postComments(formData,id))\n    }\n\n}\n\n\n\n\n\nexport default connect(moveStateToProps,mapDispatchToProps)(Container);\n\n\n\n"]},"metadata":{},"sourceType":"module"}